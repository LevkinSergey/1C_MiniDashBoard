
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗапуститьПроверки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОтключитьОбработчикОжидания("ВыполнитьПроверкиВФоновомЗадании");
КонецПроцедуры

&НаКлиенте
Процедура ТаблоПриАктивизацииСтроки(Элемент)
	ОбновитьДополнительнуюИнформацию();
КонецПроцедуры

&НаКлиенте
Процедура ТаблоПриАктивизацииЯчейки(Элемент)
	Элементы.Табло.ВыделенныеСтроки.Очистить();
КонецПроцедуры



&НаКлиенте
Процедура ЗапуститьПроверки(Команда)
	
	ПодключитьОбработчикОжидания("ВыполнитьПроверкиВФоновомЗадании", 1, Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьПроверки(Команда)
	ОтключитьОбработчикОжидания("ВыполнитьПроверкиВФоновомЗадании");
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Табло.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегламентныеПроверки.Ссылка КАК Процедура,
		|	РегламентныеПроверки.Расписание,
		|	РегламентныеПроверки.ХранилищеВнешнейОбработки
		|ИЗ
		|	Справочник.РегламентныеПроверки КАК РегламентныеПроверки
		|ГДЕ
		|	НЕ РегламентныеПроверки.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.Табло.Добавить(), ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкиВФоновомЗадании()
	
	Для Каждого ТекущаяСтрокаТабла Из Объект.Табло Цикл
		
		Если ТекущаяСтрокаТабла.АдресХранилищаЗначения <> "" И
			НЕ ЭтоАдресВременногоХранилища(ТекущаяСтрокаТабла.АдресХранилищаЗначения) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ТекущаяСтрокаТабла.Процедура) <> Тип("Строка") 
			И ТипЗнч(ТекущаяСтрокаТабла.Процедура) <> Тип("СправочникСсылка.РегламентныеПроверки") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекущаяСтрокаТабла.Процедура = "" Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			Результат = ПолучитьИзВременногоХранилища(ТекущаяСтрокаТабла.АдресХранилищаЗначения);
			
			Если ТипЗнч(Результат) = Тип("Массив") Тогда
				ТекущаяСтрокаТабла.ТекущееСостояние = Результат[0];
				ТекущаяСтрокаТабла.ДополнительнаяИнформация = ПредставитьМассивРезультатаВВидеСтроки(Результат);
			Иначе
				ТекущаяСтрокаТабла.ТекущееСостояние = Результат;
				ТекущаяСтрокаТабла.ДополнительнаяИнформация = "";
			КонецЕсли;
	
		Исключение
			ТекущаяСтрокаТабла.АдресХранилищаЗначения = ПоместитьВоВременноеХранилище(Неопределено);			
		КонецПопытки; 
			
		Если ТекущаяДата() - ТекущаяСтрокаТабла.ВремяПоследнейПроверки >= ТекущаяСтрокаТабла.Расписание Тогда
			ЗапуститьДлительнуюОперациюАсинхронноНаСервере(ТекущаяСтрокаТабла.Процедура, ТекущаяСтрокаТабла.АдресХранилищаЗначения);
			ТекущаяСтрокаТабла.ВремяПоследнейПроверки = ТекущаяДата();
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтаФорма.Заголовок = Формат(ТекущаяДата(), "ДЛФ=T");
	ОбновитьДополнительнуюИнформацию();
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьДлительнуюОперациюАсинхронноНаСервере(ПроцедураПроверки, АдресХранилищаЗначения)
	
	Если ПроцедураПроверки = Неопределено Тогда Возврат КонецЕсли;
	
	Если ТипЗнч(ПроцедураПроверки) = Тип("СправочникСсылка.РегламентныеПроверки") Тогда
		
		Парам = Новый Массив;
	    Парам.Добавить(АдресХранилищаЗначения);
		Парам.Добавить(ПроцедураПроверки);
		
		ФоновыеЗадания.Выполнить("АсинхронныеОбработчики.ВыполнитьПроверкуВнешнейОбработки", 
	        Парам, Новый УникальныйИдентификатор);
			
	КонецЕсли;
	
			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДополнительнуюИнформацию()
	
	ВыбраннаяСтрока = Элементы.Табло.ТекущиеДанные;
	
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ЭтаФорма.ДополнительнаяИнформация = ВыбраннаяСтрока.ДополнительнаяИнформация;	
		Элементы.ДополнительнаяИнформация.Заголовок = ВыбраннаяСтрока.Процедура;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Функция ПредставитьМассивРезультатаВВидеСтроки(Результат)
	
	ПоследнийИндекс = Результат.Количество() - 1;
	
	Если ПоследнийИндекс = 0 Тогда Возврат "" КонецЕсли;
	
	СтрокаРезультата = "";
	
	Для Индекс = 1 По ПоследнийИндекс Цикл
		
		СтрокаРезультата = СтрокаРезультата + Строка(Результат[Индекс]);
		
		Если Индекс <> ПоследнийИндекс Тогда
			СтрокаРезультата = СтрокаРезультата + Символы.ПС;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрокаРезультата;
	
КонецФункции